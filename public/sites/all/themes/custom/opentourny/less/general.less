a {
  color: @otny_blue;
  font-weight: 900;
  text-decoration: none;
  &:hover {
    color: @otny_blue;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 900;
  margin-top: 0;
}
div,p {

   line-height: 24px;
}

hr{
  margin-top:0;
}

.checkmarks {
  & > .field {
    & > .field-items {
      & > .field-item {
        background-image: url('../images/ico-checkmark.png');
        background-repeat: no-repeat;
        line-height: 17px;
        padding-left: 23px;
        margin-bottom: 20px;

      }

    }
  }
}

ul {
  padding-left: 25px;
  &.checkmarks {
    .list-reset;
    padding-left: 0;

    li {

      background-image: url('../images/ico-checkmark.png');
      background-repeat: no-repeat;
      line-height: 18px;
      margin: 16px;
      padding-left: 26px;
      margin-left: 0;

    }
  }
}

img {
  .entity-content-container &,
  .node & {
    width: 100% !important;
    height: auto !important;

    &.no-resize {
      width: auto !important;
      margin: 0 auto;
    }
  }
}

blockquote {
  .spacing-reset;
  font-size: 16px;
  > * {
    quotes: "“" "”" "‘" "’";

    &:before,
    &:after {
      font-weight: bold;
    }

    &:before {
      content: open-quote;
      margin-right: 2px;
    }
    &:after {
      content: close-quote;
      margin-left: 2px;
    }
  }
}

.quote-divider {
  margin-top: 25px;
  border-top: 1px solid #FFF;
  padding-top: 25px;
}

//Buttons
.btn {
  line-height: 30px;
  font-weight: bold;
  padding-top: 0;
  padding-bottom: 0;
}

.button-wrapper {
  .btn {
    width: 100%;
  }
}

//Forms
.form-control {
  height: 30px;
  color: @otny_black;
  font-size: 14px;
  line-height: 30px;
  padding: 0 10px;
  background-color: #fff;
}

select.form-control {
  background-color: #f5f5f5;
  font-weight: 900;
}

.addthis_native_toolbox,
.addthis_sharing_toolbox {
   float:right;
   margin-top: 15px;
}

a.red-white-button {
  display: block;
  .btn;
  .otny-color-white;
  .otny-bg-red;
}

img.file-icon {
  display: none !important;
}

.video-js {
  width: 100% !important; /* override the plugin's inline dims to let vids scale fluidly */
  height: auto !important;
}

.video-js video {
  position: relative !important;
}

/* The video should expand to force the height of the containing div.
One in-flow element is good. As long as everything else in the container
div stays `position: absolute` we're okay */

.video-js .vjs-big-play-button {
  top: 50%; /* errrr, why isn't the play button centered in the default skin? :) */
  left: 50%;
  margin: -4em 0 0 -6em; /* the old negative margin trick */
}

.vjs-loading-spinner {
  display: none !important;
}

.menu-block-wrapper {
  ul {
    padding-left: 0;
  }
}